<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ eGov suite of products aim to improve the internal efficiency,transparency,
  ~    accountability and the service delivery of the government  organizations.
  ~
  ~     Copyright (C) <2015>  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  -->

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="org.egov.demand.model.EgDemandReasonDetails" table="EG_DEMAND_REASON_DETAILS" >
        <id name="id" type="java.lang.Long">
            <column name="ID"  />
         <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
			<param name="sequence_name">SEQ_EG_DEMAND_REASON_DETAILS</param>
		</generator>

        </id>
        
        <timestamp
		column="MODIFIED_DATE"
		name="modifiedDate"
		access="property"
		unsaved-value="null"
	    />
        <many-to-one name="egDemandReason" class="org.egov.demand.model.EgDemandReason" >
            <column name="ID_DEMAND_REASON"  not-null="true" />
        </many-to-one>
      
        <property name="percentage" type="java.math.BigDecimal">
            <column name="PERCENTAGE"  />
        </property>
        <property name="fromDate" type="java.util.Date">
            <column name="FROM_DATE" not-null="true" />
        </property>
        <property name="toDate" type="java.util.Date">
            <column name="TO_DATE"  />
        </property>
        <property name="lowLimit" type="java.math.BigDecimal">
            <column name="LOW_LIMIT"  />
        </property>
        <property name="highLimit" type="java.math.BigDecimal">
            <column name="HIGH_LIMIT"  />
        </property>
        <property name="createDate" type="java.util.Date">
            <column name="CREATE_DATE"  not-null="true" />
        </property>
        
         <property name="flatAmount" type="java.math.BigDecimal">
            <column name="FLAT_AMOUNT"  />
         </property>
         <property name="isFlatAmntMax" type="integer">
            <column name="IS_FLATAMNT_MAX"  />
         </property>
    </class>
    <query name="DEMANDREASONDETAILBY_DEMANDREASONID">
    	<![CDATA[select drd from EgDemandReasonDetails drd where drd.egDemandReason.id= ? and ? between drd.lowLimit and drd.highLimit]]>
	</query>
	<query name="DEMANDREASONDETAILS_BY_DEMANDREASONID_DATE">
    	<![CDATA[select drd from EgDemandReasonDetails drd where drd.egDemandReason.egDemandReasonMaster.code = ? and ? between drd.lowLimit and drd.highLimit and ? between drd.fromDate and drd.toDate]]>
	</query>
	<query name="DEMANDREASONDETAILS_BY_DEMANDREASON_AND_INSTALLMENT">
    	<![CDATA[select drd from EgDemandReasonDetails drd where drd.egDemandReason.egDemandReasonMaster.code = ? and ? between drd.lowLimit and drd.highLimit and ((? between drd.fromDate and drd.toDate) or (? between drd.fromDate and drd.toDate)) order by drd.fromDate]]>
	</query>
	<query name="DEMANDREASONDETAILS_BY_MOUDULEID">
    	<![CDATA[select drd from EgDemandReasonDetails drd where drd.egDemandReason.egDemandReasonMaster.egModule = ? order by drd.egDemandReason.egDemandReasonMaster.orderId]]>
	</query>
	<query name="DEMANDREASONDETAILS_BY_ID">
    	<![CDATA[select drd from EgDemandReasonDetails drd where drd.id = ?]]>
	</query>
</hibernate-mapping>
